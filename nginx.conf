user  nginx;

# How many cpus you have: `nproc` or `lscpu` or just set this to `auto`
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_image_filter_module.so;

events {
    # How many files you can accept: `ulimit -n`
    worker_connections  1024;
}


http {
    include         mime.types;
    default_type    application/octet-stream;
    resolver        8.8.8.8 8.8.4.4 1.1.1.1 1.0.0.1;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    #  _                 _ _           _
    # | | ___   __ _  __| | |__   __ _| |
    # | |/ _ \ / _` |/ _` | '_ \ / _` | |
    # | | (_) | (_| | (_| | |_) | (_| | |
    # |_|\___/ \__,_|\__,_|_.__/ \__,_|_|
    #
    # server {
    #     listen  90;

    #     location / {
    #         proxy_pass  http://allbackend;
    #     }
    # }

    server_tokens   off;
    keepalive_timeout   30;

    # Buffer size for POST submissions
    client_body_buffer_size 10K;    # 8k/16k default, increase if there are image uploads
    client_max_body_size    5m;     # 1m default, > 413 Entity too large

    # Max time to receive client headers/body
    client_header_timeout   60s;     # 60s, > 408 Request Time-out
    client_body_timeout     60s;     # 60s, > 408 Request Time-out

    send_timeout    2s;     # Max time for the client accept/receive a response
    sendfile        on;     # Skip buffering for static files
    tcp_nopush      on;     # Optimize sendfile packets

    # gzip
    gzip on;
    gzip_comp_level 3;
    gzip_types application/javascript application/json application/xml text/css text/javascript text/plain text/xml;

    include conf.d/*.conf;
    include sites-enabled/*.conf;
}